{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srv\\\\OneDrive - Veralto\\\\Desktop\\\\seating-bus\\\\frontend\\\\src\\\\components\\\\Admin\\\\UserManagement\\\\UserManagementPage.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\"; // Import Link from react-router-dom\n\nimport \"./UserManagementPage.css\";\nimport EditUserPopup from \"../ViewUserPage/ViewUserPage\"; // Import the EditUserPopup component\n\nimport axios from \"axios\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserManagementPage = () => {\n  const [users, setUsers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10); // Number of items to display per page\n\n  const [showEditPopup, setShowEditPopup] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedAssociateId, setSelectedAssociateId] = useState(null); // New state variable for storing the selected associate ID\n\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [userToDelete, setUserToDelete] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"http://localhost:3000/admin/get-users\").then(response => {\n      setUsers(response.data.data.users);\n    }).catch(error => {\n      console.error(\"Error fetching users:\", error);\n    });\n  }, []); // Pagination functions\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const nextPage = () => setCurrentPage(prevPage => prevPage + 1);\n\n  const prevPage = () => setCurrentPage(prevPage => prevPage - 1); // Filtered users based on search term\n\n\n  const filteredUsers = users.filter(user => user.associate_name.toLowerCase().includes(searchTerm.toLowerCase())); // Get current page of users based on pagination\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentUsers = filteredUsers.slice(indexOfFirstItem, indexOfLastItem); // Event handlers\n\n  const handleSearch = e => {\n    setSearchTerm(e.target.value);\n  };\n\n  const clearSearch = () => {\n    setSearchTerm(\"\");\n  };\n\n  var handleEditUser = user => {\n    setSelectedUser(user);\n    setSelectedAssociateId(user.associate_id); // Set the selected associate ID\n\n    setShowEditPopup(true);\n  };\n\n  var handleSaveUser = editedUser => {\n    // Save edited user details to the backend (to be implemented later)\n    // For now, update the user in the local state\n    setUsers(prevUsers => prevUsers.map(u => u.id === editedUser.id ? editedUser : u));\n    setShowEditPopup(false);\n  };\n\n  var handleCancelEdit = () => {\n    setShowEditPopup(false);\n  };\n\n  var handleDeleteUser = user => {\n    setUserToDelete(user); // Make a DELETE request to delete the user using the API\n\n    console.log(user.associate_id);\n    axios.delete(`http://localhost:3000/admin/delete-user/${user.associate_id}`).then(() => {\n      // If the request is successful, remove the user from the local state\n      setUsers(prevUsers => prevUsers.filter(u => u.id !== user.id));\n      setShowDeleteConfirmation(false); // Close the delete confirmation popup\n    }).catch(error => {\n      // Handle errors if the request fails\n      console.error(\"Error deleting user:\", error);\n    });\n  };\n\n  var confirmDelete = () => {\n    // Delete the user from the local state\n    setUsers(prevUsers => prevUsers.filter(u => u.id !== userToDelete.id));\n    setShowDeleteConfirmation(false);\n  };\n\n  var cancelDelete = () => {\n    setShowDeleteConfirmation(false);\n  }; // Other event handlers (handleEditUser, handleSaveUser, handleDeleteUser, etc.)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"ump-h2\",\n      children: \"User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: handleSearch,\n          placeholder: \"Search...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearSearch,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-new-user-btn\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"./addnewuser\",\n          children: \"Add New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"content-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Associate ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Manager Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.associate_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.associate_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.manager_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"action-column\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/edituser/${user.id}`,\n              children: /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteUser(user),\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevPage,\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), Array.from({\n        length: Math.ceil(filteredUsers.length / itemsPerPage)\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(index + 1),\n        className: currentPage === index + 1 ? \"active\" : \"\",\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        disabled: currentPage === Math.ceil(filteredUsers.length / itemsPerPage),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), showEditPopup && /*#__PURE__*/_jsxDEV(EditUserPopup, {\n      user: selectedUser,\n      onSave: handleSaveUser,\n      onCancel: handleCancelEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this), showDeleteConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-confirmation\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure you want to delete this user?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: confirmDelete,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelDelete,\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\nexport default UserManagementPage;","map":{"version":3,"sources":["C:/Users/Srv/OneDrive - Veralto/Desktop/seating-bus/frontend/src/components/Admin/UserManagement/UserManagementPage.jsx"],"names":["React","useState","useEffect","Link","EditUserPopup","axios","VisibilityIcon","DeleteIcon","UserManagementPage","users","setUsers","currentPage","setCurrentPage","itemsPerPage","showEditPopup","setShowEditPopup","selectedUser","setSelectedUser","selectedAssociateId","setSelectedAssociateId","showDeleteConfirmation","setShowDeleteConfirmation","userToDelete","setUserToDelete","searchTerm","setSearchTerm","get","then","response","data","catch","error","console","paginate","pageNumber","nextPage","prevPage","filteredUsers","filter","user","associate_name","toLowerCase","includes","indexOfLastItem","indexOfFirstItem","currentUsers","slice","handleSearch","e","target","value","clearSearch","handleEditUser","associate_id","handleSaveUser","editedUser","prevUsers","map","u","id","handleCancelEdit","handleDeleteUser","log","delete","confirmDelete","cancelDelete","email","manager_name","Array","from","length","Math","ceil","_","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\"; // Import Link from react-router-dom\r\nimport \"./UserManagementPage.css\";\r\nimport EditUserPopup from \"../ViewUserPage/ViewUserPage\"; // Import the EditUserPopup component\r\nimport axios from \"axios\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst UserManagementPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(10); // Number of items to display per page\r\n  const [showEditPopup, setShowEditPopup] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [selectedAssociateId, setSelectedAssociateId] = useState(null); // New state variable for storing the selected associate ID\r\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\r\n  const [userToDelete, setUserToDelete] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:3000/admin/get-users\")\r\n      .then((response) => {\r\n        setUsers(response.data.data.users);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching users:\", error);\r\n      });\r\n  }, []);\r\n\r\n  // Pagination functions\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n  const nextPage = () => setCurrentPage((prevPage) => prevPage + 1);\r\n  const prevPage = () => setCurrentPage((prevPage) => prevPage - 1);\r\n\r\n  // Filtered users based on search term\r\n  const filteredUsers = users.filter((user) =>\r\n    user.associate_name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // Get current page of users based on pagination\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentUsers = filteredUsers.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  // Event handlers\r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const clearSearch = () => {\r\n    setSearchTerm(\"\");\r\n  };\r\n\r\n  var handleEditUser = (user) => {\r\n    setSelectedUser(user);\r\n    setSelectedAssociateId(user.associate_id); // Set the selected associate ID\r\n    setShowEditPopup(true);\r\n  };\r\n\r\n  var handleSaveUser = (editedUser) => {\r\n    // Save edited user details to the backend (to be implemented later)\r\n    // For now, update the user in the local state\r\n    setUsers((prevUsers) =>\r\n      prevUsers.map((u) => (u.id === editedUser.id ? editedUser : u))\r\n    );\r\n    setShowEditPopup(false);\r\n  };\r\n\r\n  var handleCancelEdit = () => {\r\n    setShowEditPopup(false);\r\n  };\r\n\r\n  var handleDeleteUser = (user) => {\r\n    setUserToDelete(user);\r\n\r\n    // Make a DELETE request to delete the user using the API\r\n\r\n    console.log(user.associate_id);\r\n    axios\r\n      .delete(`http://localhost:3000/admin/delete-user/${user.associate_id}`)\r\n      .then(() => {\r\n        // If the request is successful, remove the user from the local state\r\n        setUsers((prevUsers) => prevUsers.filter((u) => u.id !== user.id));\r\n        setShowDeleteConfirmation(false); // Close the delete confirmation popup\r\n      })\r\n      .catch((error) => {\r\n        // Handle errors if the request fails\r\n        console.error(\"Error deleting user:\", error);\r\n      });\r\n  };\r\n\r\n  var confirmDelete = () => {\r\n    // Delete the user from the local state\r\n    setUsers((prevUsers) => prevUsers.filter((u) => u.id !== userToDelete.id));\r\n    setShowDeleteConfirmation(false);\r\n  };\r\n\r\n  var cancelDelete = () => {\r\n    setShowDeleteConfirmation(false);\r\n  };\r\n\r\n  // Other event handlers (handleEditUser, handleSaveUser, handleDeleteUser, etc.)\r\n\r\n  return (\r\n    <div className=\"user-management-container\">\r\n      <h2 className=\"ump-h2\">User Management</h2>\r\n      <div className=\"filter-container\">\r\n        <div className=\"search-container\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchTerm}\r\n            onChange={handleSearch}\r\n            placeholder=\"Search...\"\r\n          />\r\n          <button onClick={clearSearch}>Clear</button>\r\n        </div>\r\n        <div className=\"add-new-user-btn\">\r\n          <Link to=\"./addnewuser\">Add New User</Link>\r\n        </div>\r\n      </div>\r\n      <table className=\"content-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Associate ID</th>\r\n            <th>Full Name</th>\r\n            <th>Email</th>\r\n            <th>Manager Name</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentUsers.map((user) => (\r\n            <tr key={user.id}>\r\n              <td>{user.id}</td>\r\n              <td>{user.associate_id}</td>\r\n              <td>{user.associate_name}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.manager_name}</td>\r\n              <td className=\"action-column\">\r\n                <Link to={`/edituser/${user.id}`}>\r\n                  <VisibilityIcon />\r\n                </Link>\r\n                <button onClick={() => handleDeleteUser(user)}>\r\n                  <DeleteIcon />\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Pagination */}\r\n      <div className=\"pagination\">\r\n        <button onClick={prevPage} disabled={currentPage === 1}>\r\n          Previous\r\n        </button>\r\n        {/* Render page numbers */}\r\n        {Array.from({\r\n          length: Math.ceil(filteredUsers.length / itemsPerPage),\r\n        }).map((_, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => paginate(index + 1)}\r\n            className={currentPage === index + 1 ? \"active\" : \"\"}\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n        <button\r\n          onClick={nextPage}\r\n          disabled={\r\n            currentPage === Math.ceil(filteredUsers.length / itemsPerPage)\r\n          }\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n\r\n      {/* Render edit user popup if showEditPopup is true */}\r\n      {showEditPopup && (\r\n        <EditUserPopup\r\n          user={selectedUser}\r\n          onSave={handleSaveUser}\r\n          onCancel={handleCancelEdit}\r\n        />\r\n      )}\r\n      {/* Render delete confirmation popup if showDeleteConfirmation is true */}\r\n      {showDeleteConfirmation && (\r\n        <div className=\"delete-confirmation\">\r\n          <p>Are you sure you want to delete this user?</p>\r\n          <button onClick={confirmDelete}>Yes</button>\r\n          <button onClick={cancelDelete}>No</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManagementPage;\r\n"]},"metadata":{},"sourceType":"module"}